{"version":3,"file":"Skeleton-DmysgnrS.js","sources":["../../../../../packages/dynamic-css/dist/index.mjs","../../../../src/composables/constant/variables/colors.ts","../../../../src/composables/constant/variables/render.ts","../../../../src/composables/constant/variables/fonts.ts","../../../../src/composables/constant/variables/papers.ts","../../../../src/composables/constant/variables/default.ts","../../../../src/composables/constant/variables/versions.ts","../../../../src/composables/constant/index.ts","../../../../src/utils/css.ts","../../../../src/composables/stores/data.ts","../../../../../packages/google-fonts-loader/dist/index.mjs","../../../../src/utils/font.ts","../../../../../packages/utils/dist/index.mjs","../../../../src/composables/stores/style.ts","../../../../src/composables/monaco/index.ts","../../../../src/composables/toast.ts","../../../../src/utils/storage/utils.ts","../../../../src/utils/storage/migrate.ts","../../../../src/utils/storage/localForage.ts","../../../../src/utils/storage/index.ts","../../../../../packages/vue-shortcuts/dist/index.mjs","../../../../src/components/shared/ui/Editable.vue","../../../../../packages/markdown-it-katex/dist/index.mjs","../../../../../packages/markdown-it-cross-ref/dist/index.mjs","../../../../../packages/markdown-it-latex-cmds/dist/index.mjs","../../../../../packages/front-matter/dist/index.mjs","../../../../src/utils/markdown.ts","../../../../../packages/vue-smart-pages/dist/index.mjs","../../../../src/components/shared/ResumeRender.vue","../../../../src/components/ui/skeleton/Skeleton.vue"],"sourcesContent":["// src/index.ts\nvar sheetsMap = /* @__PURE__ */ new Map();\nvar injectCss = (id, content) => {\n  let style = sheetsMap.get(id);\n  if (!style) {\n    style = document.createElement(\"style\");\n    style.setAttribute(\"type\", \"text/css\");\n    style.setAttribute(\"data-dynamic-css-id\", id);\n    style.textContent = content;\n    document.head.appendChild(style);\n  } else {\n    style.textContent = content;\n  }\n  sheetsMap.set(id, style);\n};\nvar removeCss = (id) => {\n  const style = sheetsMap.get(id);\n  if (style) {\n    document.head.removeChild(style);\n    sheetsMap.delete(id);\n  }\n};\nexport {\n  injectCss,\n  removeCss\n};\n","export const PRESET_COLORS = [\r\n  \"#000000\",\r\n  \"#377bb5\",\r\n  \"#ca3832\",\r\n  \"#ee8732\",\r\n  \"#9c5bde\",\r\n  \"#43912b\"\r\n];\r\n","export const PRINT_BOTTOM = 10;\r\nexport const PREVIEW_ID = \"preview\";\r\nexport const PREVIEW_SELECTOR = `#resume-${PREVIEW_ID}`;\r\n","import type { Subset } from \"@ohmycv/google-fonts-loader\";\r\n\r\nexport type Font = {\r\n  readonly name: string;\r\n  readonly fontFamily?: string;\r\n};\r\n\r\nexport const LOCAL_EN_FONTS: Font[] = [\r\n  {\r\n    name: \"Adobe Garamond Pro\"\r\n  },\r\n  {\r\n    name: \"Arial\"\r\n  },\r\n  {\r\n    name: \"Arial Black\"\r\n  },\r\n  {\r\n    name: \"Arial Narrow\"\r\n  },\r\n  {\r\n    name: \"CMU Sans Serif\"\r\n  },\r\n  {\r\n    name: \"Courier New\"\r\n  },\r\n  {\r\n    name: \"Euclid\"\r\n  },\r\n  {\r\n    name: \"Georgia\"\r\n  },\r\n  {\r\n    name: \"Minion Pro\"\r\n  },\r\n  {\r\n    name: \"Palatino\"\r\n  },\r\n  {\r\n    name: \"Tahoma\"\r\n  },\r\n  {\r\n    name: \"Tex Gyre Pagella\"\r\n  },\r\n  {\r\n    name: \"Times New Roman\"\r\n  },\r\n  {\r\n    name: \"Times Newer Roman\"\r\n  },\r\n  {\r\n    name: \"Trebuchet MS\"\r\n  },\r\n  {\r\n    name: \"Verdana\"\r\n  }\r\n];\r\n\r\nexport const LOCAL_CJK_FONTS: Font[] = [\r\n  {\r\n    name: \"华康宋体\",\r\n    fontFamily: \"HKST\"\r\n  },\r\n  {\r\n    name: \"霞鹜文楷\",\r\n    fontFamily: \"LXGW WenKai\"\r\n  }\r\n];\r\n\r\nexport const GF_CJK_SUBSETS = [\r\n  \"chinese-simplified\",\r\n  \"chinese-traditional\",\r\n  \"japanese\",\r\n  \"korean\"\r\n] as Subset[];\r\n\r\nexport const GF_CJK_FAMILY_TO_NAME = {\r\n  \"Noto Sans SC\": \"思源黑体（简）\",\r\n  \"Noto Sans TC\": \"思源黑体（繁）\",\r\n  \"Noto Serif SC\": \"思源宋体（简）\",\r\n  \"Noto Serif TC\": \"思源宋体（繁）\"\r\n} as Record<string, string>;\r\n\r\nexport const GF_CJK_FIRST = [\r\n  \"思源黑体（简）\",\r\n  \"思源黑体（繁）\",\r\n  \"思源宋体（简）\",\r\n  \"思源宋体（繁）\"\r\n];\r\n\r\nexport const GF_IGNORE_FONTS = [\r\n  \"Baloo 2\",\r\n  \"Baloo Bhai 2\",\r\n  \"Baloo Bhaijaan 2\",\r\n  \"Baloo Bhaina 2\",\r\n  \"Baloo Chettan 2\",\r\n  \"Baloo Da 2\",\r\n  \"Baloo Paaji 2\",\r\n  \"Baloo Tamma 2\",\r\n  \"Baloo Tammudu 2\",\r\n  \"Baloo Thambi 2\",\r\n  \"Brygada 1918\",\r\n  \"Exo 2\",\r\n  \"M PLUS 1\",\r\n  \"M PLUS 1 Code\",\r\n  \"M PLUS 1p\",\r\n  \"M PLUS 2\",\r\n  \"M PLUS Rounded 1c\",\r\n  \"Shippori Mincho\",\r\n  \"Source Sans 3\",\r\n  \"Source Serif 4\"\r\n];\r\n","export const PAPER_SIZES = {\r\n  A4: {\r\n    h: 297 + 2,\r\n    w: 210\r\n  },\r\n  letter: {\r\n    h: 279.4 + 3,\r\n    w: 215.9\r\n  }\r\n};\r\n\r\nexport const MM_TO_PX = 3.78;\r\n\r\nexport type ValidPaperSize = keyof typeof PAPER_SIZES;\r\n","import { PREVIEW_SELECTOR } from \"./render\";\r\nimport type { ResumeStyles } from \"../../stores/style\";\r\n\r\nexport const DEFAULT_STYLES = {\r\n  marginV: 50,\r\n  marginH: 45,\r\n  lineHeight: 1.3,\r\n  paragraphSpace: 5,\r\n  themeColor: \"#377bb5\",\r\n  fontCJK: {\r\n    name: \"华康宋体\",\r\n    fontFamily: \"HKST\"\r\n  },\r\n  fontEN: {\r\n    name: \"Minion Pro\"\r\n  },\r\n  fontSize: 15,\r\n  paper: \"A4\"\r\n} as ResumeStyles;\r\n\r\nexport const DEFAULT_MD_CONTENT = `---\r\nname: Haha Ha\r\nheader:\r\n  - text: |\r\n      <span style=\"font-size: 1.2em; font-weight: bold;\">Applying for: Cooking Engineer</span>\r\n  - text: <span class=\"iconify\" data-icon=\"tabler:phone\"></span> (+1) 123-456-7890\r\n    newLine: true\r\n  - text: <span class=\"iconify\" data-icon=\"tabler:mail\"></span> icancook@email.com\r\n    link: mailto:icancook@email.com\r\n  - text: <span class=\"iconify\" data-icon=\"tabler:brand-github\"></span> Renovamen\r\n    link: https://github.com/Renovamen\r\n  - text: <span class=\"iconify\" data-icon=\"charm:person\"></span> zxh.me\r\n    link: https://zxh.me\r\n---\r\n\r\n<!-- Important: Replace all template content, especially contact details, with your own information. -->\r\n\r\n<!-- Important: When updating your email address, remember to change both the \"text\" (visible text) and the \"link\" (underlying hyperlink) fields. -->\r\n\r\n\r\n## Education\r\n\r\n**Harvest University**\r\n  ~ Cambridge, MA\r\n\r\nM.S. in Cooking Science\r\n  ~ 09/2021 - 01/2023\r\n\r\n**Huangdu Institute of Tofu**\r\n  ~ Shanghai, China\r\n\r\nB.Eng. in Salad Engineering\r\n  ~ 09/2016 - 07/2020\r\n\r\n\r\n## Publications\r\n\r\n[~P1]: **Eating is All You Need**\r\n\r\n    <u>Haha Ha</u>, San Zhang\r\n\r\n    *Conference on Nutritional Ingredients Processing Systems (NIPS), 2099*\r\n\r\n[~P2]: **You Only Cook Once: Unified, Real-Time Mapo Tofu Recipe**\r\n\r\n    <u>Haha Ha</u>, San Zhang, Si Li, Wu Wang\r\n\r\n    *Culinary Visualization and Potato Roasting Conference (CVPR), 2077 **(Best Paper Honorable Mention)***\r\n\r\n\r\n## Experience\r\n\r\n**Cooking Engineer Intern**\r\n  ~ Microwavesoft\r\n  ~ 07/2021 - Present\r\n\r\n- Developed an innovative, versatile cooking methodology applicable across diverse ingredients, incorporating and improving upon recent culinary trends\r\n- Created a streamlined cream of mushroom soup recipe, achieving results comparable to complex state-of-the-art techniques through a novel mushroom-cutting approach; published in NIPS 2099 (see [~P1])\r\n- Designed a specialized cooking pan that enhanced research efficiency for team members\r\n\r\n\r\n**Engineering Chef Intern**\r\n  ~ University of California, Berkebake\r\n  ~ 08/2020 - Present\r\n\r\n- Developed a precise mapo tofu quality assessment technique using thermometer-based measurements\r\n- Invented a rapid stir-frying algorithm for tofu cooking, replacing vague instructions like \"add as much as you can\" with specific hot sauce measurements; published in CVPR 2077 (see [~P2])\r\n- Outperformed SOTA cooking methods in both efficiency and quality across experiments with popular tofu types\r\n\r\n\r\n**Student Chef**\r\n  ~ Cabbage Melon University\r\n  ~ 03/2020 - 06/2020\r\n\r\n- Developed an innovative mapo tofu consumption framework utilizing a spoon-chopstick combination\r\n- Engineered a filtering method for tofu dataset creation, inspired by bean grinding techniques\r\n- Established two new metrics for evaluating eating plan novelty and diversity\r\n- Significantly surpassed existing methods and baselines in diversity, novelty, and coherence\r\n\r\n\r\n**Research Chef Intern**\r\n  ~ Snapchopstick\r\n  ~ 07/2018 - 08/2018\r\n\r\n- Designed two novel sandwiches by repurposing breads and meat from traditional bacon cheeseburgers, maximizing resource efficiency\r\n- Leveraged structure duality to boost cooking speed for two complementary tasks based on shared ingredients\r\n- Surpassed strong baselines on QWE'15 and ASDF'14 dataset\r\n\r\n\r\n## Awards and Honors\r\n\r\n**Gold**, International Collegiate Catching Fish Contest (ICCFC)\r\n  ~ 2018\r\n\r\n**First Prize**, China National Scholarship for Outstanding Dragon Killers\r\n  ~ 2017, 2018\r\n\r\n\r\n## Skills\r\n\r\n**Programming Languages:** <span class=\"iconify\" data-icon=\"vscode-icons:file-type-python\"></span> Frython, <span class=\"iconify\" data-icon=\"vscode-icons:file-type-js-official\"></span> JavaSauce / <span class=\"iconify\" data-icon=\"vscode-icons:file-type-typescript-official\"></span> TypeSauce, <span class=\"iconify\" data-icon=\"vscode-icons:file-type-cpp2\"></span> Cheese++, <span class=\"iconify\" data-icon=\"logos:java\" data-inline=\"false\"></span> Java Bean\r\n\r\n**Tools and Frameworks:** GrillHub, PanFlow, TensorFork, SpiceNet, $\\\\LaTeX$\r\n\r\n**Languages:** Chinese (native), English (proficient)\r\n`;\r\n\r\nexport const DEFAULT_CSS_CONTENT = `/* Backbone CSS for Resume Template 1 */\r\n\r\n/* Basic */\r\n\r\n${PREVIEW_SELECTOR} [data-scope=\"vue-smart-pages\"][data-part=\"page\"] {\r\n  background-color: white;\r\n  color: black;\r\n  text-align: justify;\r\n  -moz-hyphens: auto;\r\n  -ms-hyphens: auto;\r\n  -webkit-hyphens: auto;\r\n  hyphens: auto;\r\n}\r\n\r\n${PREVIEW_SELECTOR} p,\r\n${PREVIEW_SELECTOR} li,\r\n${PREVIEW_SELECTOR} dl {\r\n  margin: 0;\r\n}\r\n\r\n/* Headings */\r\n\r\n${PREVIEW_SELECTOR} h1,\r\n${PREVIEW_SELECTOR} h2,\r\n${PREVIEW_SELECTOR} h3 {\r\n  font-weight: bold;\r\n}\r\n\r\n${PREVIEW_SELECTOR} h1 {\r\n  font-size: 2.13em;\r\n}\r\n\r\n${PREVIEW_SELECTOR} h2,\r\n${PREVIEW_SELECTOR} h3 {\r\n  margin-bottom: 5px;\r\n  font-size: 1.2em;\r\n}\r\n\r\n${PREVIEW_SELECTOR} h2 {\r\n  border-bottom-style: solid;\r\n  border-bottom-width: 1px;\r\n}\r\n\r\n/* Lists */\r\n\r\n${PREVIEW_SELECTOR} ul,\r\n${PREVIEW_SELECTOR} ol {\r\n  padding-left: 1.5em;\r\n  margin: 0.2em 0;\r\n}\r\n\r\n${PREVIEW_SELECTOR} ul {\r\n  list-style-type: circle;\r\n}\r\n\r\n${PREVIEW_SELECTOR} ol {\r\n  list-style-type: decimal;\r\n}\r\n\r\n/* Definition Lists */\r\n\r\n${PREVIEW_SELECTOR} dl {\r\n  display: flex;\r\n}\r\n\r\n${PREVIEW_SELECTOR} dl dt,\r\n${PREVIEW_SELECTOR} dl dd:not(:last-child) {\r\n  flex: 1;\r\n}\r\n\r\n/* Tex */\r\n\r\n${PREVIEW_SELECTOR} :not(span.katex-display) > span.katex {\r\n  font-size: 1em !important;\r\n}\r\n\r\n/* SVG & Images */\r\n\r\n${PREVIEW_SELECTOR} svg.iconify {\r\n  vertical-align: -0.2em;\r\n}\r\n\r\n${PREVIEW_SELECTOR} img {\r\n  max-width: 100%;\r\n}\r\n\r\n/* Header */\r\n\r\n${PREVIEW_SELECTOR} .resume-header {\r\n  text-align: center;\r\n}\r\n\r\n${PREVIEW_SELECTOR} .resume-header h1 {\r\n  text-align: center;\r\n  line-height: 1;\r\n  margin-bottom: 8px;\r\n}\r\n\r\n${PREVIEW_SELECTOR} .resume-header-item:not(.no-separator)::after {\r\n  content: \" | \";\r\n}\r\n\r\n/* Citations */\r\n\r\n${PREVIEW_SELECTOR} [data-scope=\"cross-ref\"][data-part=\"definitions\"] {\r\n  padding-left: 1.2em;\r\n}\r\n\r\n${PREVIEW_SELECTOR} [data-scope=\"cross-ref\"][data-part=\"definition\"] p {\r\n  margin-left: 0.5em;\r\n}\r\n\r\n${PREVIEW_SELECTOR} [data-scope=\"cross-ref\"][data-part=\"definition\"]::marker {\r\n  content: attr(data-label);\r\n}\r\n\r\n${PREVIEW_SELECTOR} [data-scope=\"cross-ref\"][data-part=\"reference\"] {\r\n  font-size: 100%;\r\n  top: 0;\r\n}\r\n\r\n/* Dark & print mode */\r\n/* You might want to comment out the following lines if you change the background or text color. */\r\n\r\n.dark ${PREVIEW_SELECTOR} [data-scope=\"vue-smart-pages\"][data-part=\"page\"] {\r\n  background-color: hsl(213, 12%, 15%);\r\n  color: hsl(216, 12%, 84%);\r\n}\r\n\r\n@media print {\r\n  .dark ${PREVIEW_SELECTOR} [data-scope=\"vue-smart-pages\"][data-part=\"page\"] {\r\n    background-color: white;\r\n    color: black;\r\n  }\r\n}\r\n`;\r\n","export const REQUIRED_DATA_TYPES = {\r\n  v0: [\r\n    {\r\n      fields: [\"name\", \"markdown\", \"css\", \"styles.paper\", \"styles.themeColor\"],\r\n      types: \"string\"\r\n    },\r\n    {\r\n      fields: [\"update\"],\r\n      types: [\"string\", \"undefined\"]\r\n    },\r\n    {\r\n      fields: [\r\n        \"styles.fontSize\",\r\n        \"styles.lineHeight\",\r\n        \"styles.marginH\",\r\n        \"styles.marginV\",\r\n        \"styles.paragraphSpace\"\r\n      ],\r\n      types: \"number\"\r\n    }\r\n  ],\r\n  v1: [\r\n    {\r\n      fields: [\r\n        \"name\",\r\n        \"markdown\",\r\n        \"css\",\r\n        \"updated_at\",\r\n        \"created_at\",\r\n        \"styles.paper\",\r\n        \"styles.themeColor\"\r\n      ],\r\n      types: \"string\"\r\n    },\r\n    {\r\n      fields: [\r\n        \"styles.fontSize\",\r\n        \"styles.lineHeight\",\r\n        \"styles.marginH\",\r\n        \"styles.marginV\",\r\n        \"styles.paragraphSpace\"\r\n      ],\r\n      types: \"number\"\r\n    }\r\n  ]\r\n};\r\n\r\nexport const VALID_VERSIONS = Object.keys(REQUIRED_DATA_TYPES);\r\n\r\nexport type ValidVersion = keyof typeof REQUIRED_DATA_TYPES;\r\n\r\nexport const CURRENT_VERSION: ValidVersion = \"v1\";\r\nexport const EMPTY_VERSION_FALLBACK: ValidVersion = \"v0\";\r\n\r\nexport const VERSION_STORAGE_KEY = \"ohmycv_version\";\r\n","import * as V from \"./variables\";\r\nimport type { Font, ValidPaperSize, ValidVersion } from \"./variables\";\r\n\r\nexport type { Font, ValidPaperSize, ValidVersion };\r\n\r\nexport const useConstant = () => {\r\n  const FONT = {\r\n    LOCAL: {\r\n      EN: V.LOCAL_EN_FONTS,\r\n      CJK: V.LOCAL_CJK_FONTS,\r\n      includes: (font: Font) => {\r\n        const check = (list: Font[]) =>\r\n          list.some(\r\n            (item) => (item.fontFamily ?? item.name) === (font.fontFamily ?? font.name)\r\n          );\r\n        return check(V.LOCAL_EN_FONTS) || check(V.LOCAL_CJK_FONTS);\r\n      }\r\n    },\r\n    GF: {\r\n      CJK_SUBSETS: V.GF_CJK_SUBSETS,\r\n      CJK_FAMILY_TO_NAME: V.GF_CJK_FAMILY_TO_NAME,\r\n      CJK_FIRST: V.GF_CJK_FIRST,\r\n      IGNORE: V.GF_IGNORE_FONTS\r\n    }\r\n  };\r\n\r\n  const PAPER = {\r\n    SIZES: V.PAPER_SIZES,\r\n    MM_TO_PX: V.MM_TO_PX,\r\n    sizeToPx: (size: ValidPaperSize, v: \"h\" | \"w\") =>\r\n      ~~(V.PAPER_SIZES[size][v] * V.MM_TO_PX)\r\n  };\r\n\r\n  const RENDER = {\r\n    PRINT_BOTTOM: V.PRINT_BOTTOM,\r\n    PREVIEW_ID: V.PREVIEW_ID,\r\n    PREVIEW_SELECTOR: V.PREVIEW_SELECTOR\r\n  };\r\n\r\n  const COLOR = {\r\n    PRESET: V.PRESET_COLORS\r\n  };\r\n\r\n  const DEFAULT = {\r\n    RESUME_NAME: \"New Resume\",\r\n    STYLES: V.DEFAULT_STYLES,\r\n    MD_CONTENT: V.DEFAULT_MD_CONTENT,\r\n    CSS_CONTENT: V.DEFAULT_CSS_CONTENT\r\n  };\r\n\r\n  const VERSION = {\r\n    CURRENT: V.CURRENT_VERSION,\r\n    EMPTY_FALLBACK: V.EMPTY_VERSION_FALLBACK,\r\n    VERSION_KEY: V.VERSION_STORAGE_KEY,\r\n    REQUIRED_DATA_TYPES: V.REQUIRED_DATA_TYPES,\r\n    VALID: V.VALID_VERSIONS,\r\n    isVersionValid: (version: string) => V.VALID_VERSIONS.includes(version)\r\n  };\r\n\r\n  return {\r\n    FONT,\r\n    PAPER,\r\n    RENDER,\r\n    COLOR,\r\n    DEFAULT,\r\n    VERSION\r\n  };\r\n};\r\n","import { injectCss } from \"@ohmycv/dynamic-css\";\r\nimport { useConstant } from \"~/composables/constant\";\r\nimport type { ResumeStyles } from \"~/composables/stores/style\";\r\n\r\nconst { RENDER } = useConstant();\r\n\r\n/**\r\n * Service for injecting dynamic CSS into the document.\r\n *\r\n * Note: This service will not handle margins, height and width, which should be\r\n * handled by the `vue-smart-pages` package.\r\n */\r\nexport class DynamicCssService {\r\n  constructor() {}\r\n\r\n  private _selector = (id?: string | number) => {\r\n    return `#resume-${id ?? RENDER.PREVIEW_ID}`;\r\n  };\r\n\r\n  private _injectedCssId = (type: \"toolbar\" | \"css-editor\", id?: string | number) => {\r\n    return `ohmycv-${type}-${id ?? RENDER.PREVIEW_ID}`;\r\n  };\r\n\r\n  private themeColor = (selector: string, styles: ResumeStyles) => {\r\n    return (\r\n      `${selector} :not(.resume-header-item) > a { color: ${styles.themeColor}; }` +\r\n      `${selector} h1, ${selector} h2, ${selector} h3 { color: ${styles.themeColor}; }` +\r\n      `${selector} h2 { border-bottom-color: ${styles.themeColor}; }`\r\n    );\r\n  };\r\n\r\n  private lineHeight = (selector: string, styles: ResumeStyles) => {\r\n    const height = styles.lineHeight;\r\n\r\n    return (\r\n      `${selector} p, ${selector} li { line-height: ${height.toFixed(2)}; }` +\r\n      `${selector} h2, ${selector} h3 { line-height: ${(height * 1.154).toFixed(2)}; }` +\r\n      `${selector} dl { line-height: ${(height * 1.038).toFixed(2)}; }`\r\n    );\r\n  };\r\n\r\n  private paragraphSpace = (selector: string, styles: ResumeStyles) => {\r\n    return `${selector} h2 { margin-top: ${styles.paragraphSpace}px; }`;\r\n  };\r\n\r\n  private fontFamily = (selector: string, styles: ResumeStyles) => {\r\n    const fontEN = styles.fontEN.fontFamily || styles.fontEN.name;\r\n    const fontCJK = styles.fontCJK.fontFamily || styles.fontCJK.name;\r\n    return `${selector} { font-family: ${fontEN}, ${fontCJK}, Arial, Helvetica, sans-serif; }`;\r\n  };\r\n\r\n  private fontSize = (selector: string, styles: ResumeStyles) => {\r\n    return `${selector} { font-size: ${styles.fontSize}px; }`;\r\n  };\r\n\r\n  private paperSize = (styles: ResumeStyles) => {\r\n    return `@media print { @page { size: ${styles.paper}; } }`;\r\n  };\r\n\r\n  /**\r\n   * Inject CSS that controlled by the toolbar into the document.\r\n   *\r\n   * @param styles Resume styles\r\n   * @param id Element ID of the corresponding resume element (dashboard). If not\r\n   * provided, it will be set to \"preview\", which is the preview view in the editor.\r\n   */\r\n  public injectToolbar(styles: ResumeStyles, id?: string | number) {\r\n    const selector = this._selector(id);\r\n\r\n    const css =\r\n      this.fontFamily(selector, styles) +\r\n      this.fontSize(selector, styles) +\r\n      this.themeColor(selector, styles) +\r\n      this.paragraphSpace(selector, styles) +\r\n      this.lineHeight(selector, styles) +\r\n      // We only need to set paper size for the preview view in the editor\r\n      (id === undefined ? this.paperSize(styles) : \"\");\r\n\r\n    injectCss(this._injectedCssId(\"toolbar\", id), css);\r\n  }\r\n\r\n  /**\r\n   * Inject CSS that controlled by the CSS editor into the document.\r\n   *\r\n   * @param css CSS string\r\n   * @param id Element ID of the corresponding resume element (dashboard). If not\r\n   * provided, it will be set to \"preview\", which is the preview view in the editor.\r\n   */\r\n  public injectCssEditor(css: string, id?: string | number) {\r\n    if (id !== undefined) {\r\n      // To control each resume element (dashboard) separately\r\n      css = css.replaceAll(RENDER.PREVIEW_SELECTOR, this._selector(id));\r\n    }\r\n\r\n    injectCss(this._injectedCssId(\"css-editor\", id), css);\r\n  }\r\n}\r\n\r\nexport const dynamicCssService = new DynamicCssService();\r\n","export type SystemData = {\r\n  markdown: string;\r\n  css: string;\r\n  resumeId: number | null;\r\n  resumeName: string;\r\n  loaded: boolean;\r\n};\r\n\r\nexport const useDataStore = defineStore(\"data\", () => {\r\n  const { DEFAULT } = useConstant();\r\n\r\n  const data = reactive<SystemData>({\r\n    markdown: \"\",\r\n    css: \"\",\r\n    resumeId: null,\r\n    resumeName: DEFAULT.RESUME_NAME,\r\n    loaded: false\r\n  });\r\n\r\n  const setData = <T extends keyof SystemData>(key: T, value: SystemData[T]) => {\r\n    data[key] = value;\r\n    if (key === \"css\") dynamicCssService.injectCssEditor(value as string);\r\n  };\r\n\r\n  const setAndSyncToMonaco = (key: \"markdown\" | \"css\", value: string) => {\r\n    setData(key, value);\r\n\r\n    const { setContent } = useMonaco();\r\n    setContent(key, value);\r\n  };\r\n\r\n  return {\r\n    data,\r\n    setData,\r\n    setAndSyncToMonaco\r\n  };\r\n});\r\n","// src/utils/stylesheets.ts\nvar _stylesheetId = (fontId) => `font-${fontId}`;\nvar hasStylesheet = (fontId) => document.getElementById(_stylesheetId(fontId)) !== null;\nvar createStylesheet = (fontId, styles) => {\n  const stylesheet = document.createElement(\"style\");\n  stylesheet.id = _stylesheetId(fontId);\n  stylesheet.textContent = styles;\n  document.head.appendChild(stylesheet);\n};\n\n// src/utils/fonts.ts\nvar GOOGLE_FONTS_API = \"https://www.googleapis.com/webfonts/v1/webfonts\";\nvar GOOGLE_FONTS_CSS = \"https://fonts.googleapis.com/css\";\nvar get = (url) => new Promise((resolve, reject) => {\n  const request = new XMLHttpRequest();\n  request.overrideMimeType(\"application/json\");\n  request.open(\"GET\", url, true);\n  request.onreadystatechange = () => {\n    if (request.readyState === 4) {\n      if (request.status !== 200) {\n        reject(new Error(`Response has status code ${request.status}`));\n      } else {\n        resolve(request.responseText);\n      }\n    }\n  };\n  request.send();\n});\nvar getFontStylesheet = async (fonts, subsets, variants) => {\n  const url = new URL(GOOGLE_FONTS_CSS);\n  const variantsStr = variants.join(\",\");\n  const familiesStr = fonts.map((font) => `${font.family}:${variantsStr}`);\n  url.searchParams.append(\"family\", familiesStr.join(\"|\"));\n  url.searchParams.append(\"subset\", subsets.join(\",\"));\n  url.searchParams.append(\"font-display\", \"swap\");\n  return get(url.href);\n};\nvar getFontId = (fontFamily) => fontFamily.replace(/\\s+/g, \"-\").toLowerCase();\nvar fetchFontList = async (apiKey) => {\n  const url = new URL(GOOGLE_FONTS_API);\n  url.searchParams.append(\"sort\", \"popularity\");\n  url.searchParams.append(\"key\", apiKey);\n  const response = await get(url.href);\n  const fonts = JSON.parse(response).items;\n  return fonts.map((font) => ({\n    ...font,\n    id: getFontId(font.family)\n  }));\n};\nvar loadFontStylesheet = async (font, subsets, variants) => {\n  if (!hasStylesheet(font.id)) {\n    const fontStyle = await getFontStylesheet([font], subsets, variants);\n    createStylesheet(font.id, fontStyle);\n  }\n};\n\n// src/index.ts\nvar GoogleFontsLoader = class {\n  apiKey;\n  options;\n  activeFontFamily;\n  // Name of currently applied font\n  onChange;\n  fontMap = /* @__PURE__ */ new Map();\n  // Map from font families to font objects\n  constructor(apiKey, {\n    families = [],\n    categories = [],\n    subsets = [\"latin\"],\n    variants = [\"regular\"],\n    filter = () => true,\n    limit = -1,\n    sort = \"alphabet\"\n  } = {}, onChange = () => {\n  }) {\n    this.apiKey = apiKey;\n    this.options = {\n      families,\n      categories,\n      subsets,\n      variants,\n      filter,\n      limit,\n      sort\n    };\n    this.onChange = onChange;\n    this.activeFontFamily = \"\";\n  }\n  async init() {\n    const fonts = await fetchFontList(this.apiKey);\n    const isFontIncluded = (font) => (\n      // Only keep fonts whose names are included in the provided array\n      (this.options.families.length === 0 || this.options.families.includes(font.family)) && // Only keep fonts in categories from the provided array\n      (this.options.categories.length === 0 || this.options.categories.includes(font.category)) && // Only keep fonts which are available in all specified subsets\n      this.options.subsets.every((subset) => font.subsets.includes(subset)) && // Only keep fonts which contain all specified variants\n      this.options.variants.every((variant) => font.variants.includes(variant)) && // Only keep fonts for which the `filter` function evaluates to `true`\n      this.options.filter(font) === true\n    );\n    for (const font of fonts) {\n      if (this.options.limit >= 0 && this.fontMap.size >= this.options.limit) break;\n      if (isFontIncluded(font)) this.fontMap.set(font.family, font);\n    }\n    if (this.options.sort === \"alphabet\") {\n      this.fontMap = new Map(\n        [...this.fontMap.entries()].sort(\n          ([family1], [family2]) => family1.localeCompare(family2)\n        )\n      );\n    }\n    return this.fontMap;\n  }\n  getFontMap() {\n    return this.fontMap;\n  }\n  getActiveFont() {\n    const activeFont = this.fontMap.get(this.activeFontFamily);\n    if (!activeFont) {\n      throw Error(\n        `Cannot get active font: \"${this.activeFontFamily}\" is not in the font list`\n      );\n    } else {\n      return activeFont;\n    }\n  }\n  /**\n   * Set the specified font as the active font and download it\n   */\n  async setActiveFont(fontFamily) {\n    const activeFont = this.fontMap.get(fontFamily);\n    if (!activeFont) {\n      throw Error(`Cannot update active font: \"${fontFamily}\" is not in the font list`);\n    }\n    this.activeFontFamily = fontFamily;\n    await loadFontStylesheet(activeFont, this.options.subsets, this.options.variants);\n    this.onChange(activeFont);\n  }\n  setOnChange(onChange) {\n    this.onChange = onChange;\n  }\n};\nvar src_default = GoogleFontsLoader;\nexport {\n  GoogleFontsLoader,\n  src_default as default\n};\n","import GoogleFontsLoader from \"@ohmycv/google-fonts-loader\";\r\nimport type { Font as GoogleFont, Subset } from \"@ohmycv/google-fonts-loader\";\r\nimport { useConstant, type Font } from \"~/composables/constant\";\r\nimport type { ResumeStyles } from \"~/composables/stores/style\";\r\n\r\nconst { FONT } = useConstant();\r\n\r\nexport class GoogleFontsService {\r\n  private _loader: GoogleFontsLoader | null;\r\n\r\n  constructor() {\r\n    this._loader = null;\r\n  }\r\n\r\n  public includes = (font: Font) => !FONT.LOCAL.includes(font);\r\n\r\n  /**\r\n   * Whether the font is a CJK Google Font\r\n   *\r\n   * @param font Google Font\r\n   * @returns True if the font is a CJK Google Font, false otherwise\r\n   */\r\n  public isCJK = (font: GoogleFont) =>\r\n    FONT.GF.CJK_SUBSETS.some((subset: Subset) => font.subsets.includes(subset));\r\n\r\n  /**\r\n   * Load Google Fonts, if not already loaded\r\n   * @returns GoogleFontsLoader instance if successful, null otherwise\r\n   */\r\n  public async loader() {\r\n    const config = useRuntimeConfig();\r\n    const key = config.public.googleFontsKey;\r\n\r\n    if (!this._loader && key !== \"\") {\r\n      this._loader = new GoogleFontsLoader(key, {\r\n        variants: [\"regular\", \"700\"],\r\n        filter: (font: GoogleFont) => !FONT.GF.IGNORE.includes(font.family)\r\n      });\r\n      await this._loader.init();\r\n    }\r\n\r\n    return this._loader;\r\n  }\r\n\r\n  /**\r\n   * If the font is a Google Font, set it as active and download it\r\n   */\r\n  public async resolve(font: Font) {\r\n    if (this.includes(font)) {\r\n      const loader = await this.loader();\r\n\r\n      if (loader) {\r\n        await loader.setActiveFont(font.fontFamily || font.name);\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Get all available Google Fonts, separated by EN and CJK\r\n   * @returns List of EN and CJK Google Fonts\r\n   */\r\n  public async get() {\r\n    const loader = await this.loader();\r\n\r\n    const en: GoogleFont[] = [];\r\n    const cjk: GoogleFont[] = [];\r\n\r\n    if (loader) {\r\n      const fonts = loader.getFontMap();\r\n\r\n      fonts.forEach((font) => {\r\n        this.isCJK(font) ? cjk.push(font) : en.push(font);\r\n      });\r\n    }\r\n\r\n    return {\r\n      en,\r\n      cjk\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Font monitor, it will notify when the font is loaded\r\n   *\r\n   * @param fonts Font or a list of fonts to monitor\r\n   * @returns A promise, fulfilled when when all the fonts are loaded, or rejected if any\r\n   * of the fonts fail to load\r\n   */\r\n  public observer(fonts: string | Array<string>) {\r\n    const observers = [];\r\n\r\n    for (const font of typeof fonts === \"string\" ? [fonts] : fonts)\r\n      observers.push(document.fonts.load(`12px ${font}`));\r\n\r\n    return Promise.all(observers);\r\n  }\r\n\r\n  /**\r\n   * Notify when the fonts used in the resume styles are loaded\r\n   *\r\n   * @param styles Resume styles\r\n   * @see {@link observer}\r\n   */\r\n  public presetObserver(styles: ResumeStyles) {\r\n    return this.observer([\r\n      styles.fontEN.fontFamily || styles.fontEN.name,\r\n      styles.fontCJK.fontFamily || styles.fontCJK.name\r\n    ]);\r\n  }\r\n}\r\n\r\nexport const googleFontsService = new GoogleFontsService();\r\n","// src/file.ts\nvar fetchFile = async (url) => {\n  try {\n    const res = await fetch(url);\n    if (!res.ok) {\n      throw new Error(`Request error: ${res.status} ${res.statusText}`);\n    }\n    return await res.text();\n  } catch (error) {\n    return Promise.reject(error instanceof Error ? error : new Error(String(error)));\n  }\n};\nvar useFileDialog = (accept) => {\n  let callback = null;\n  let input;\n  if (document) {\n    input = document.createElement(\"input\");\n    input.type = \"file\";\n    input.style.display = \"none\";\n    if (accept) input.accept = accept;\n    input.onchange = (event) => {\n      const target = event.target;\n      const file = target.files?.[0];\n      if (file && callback) callback(file);\n    };\n  }\n  const open = () => {\n    if (!input) return;\n    document.body.appendChild(input);\n    input.click();\n    document.body.removeChild(input);\n  };\n  const onChange = (cb) => {\n    callback = cb;\n  };\n  return {\n    open,\n    onChange\n  };\n};\nvar readFile = (file) => {\n  return new Promise((resolve, reject) => {\n    const reader = new FileReader();\n    reader.onload = () => resolve(reader.result);\n    reader.onerror = () => reject(new Error(\"Failed to read file\"));\n    reader.readAsText(file);\n  });\n};\nvar downloadFile = (filename, content) => {\n  const element = document.createElement(\"a\");\n  element.href = \"data:text/plain;charset=utf-8,\" + encodeURIComponent(content);\n  element.download = filename;\n  element.style.display = \"none\";\n  document.body.appendChild(element);\n  element.click();\n  document.body.removeChild(element);\n};\n\n// src/is.ts\nvar isClient = typeof window !== \"undefined\" && typeof document !== \"undefined\";\nvar isMac = isClient && typeof navigator !== \"undefined\" && /Macintosh/.test(navigator.userAgent);\nvar isExternal = (path) => {\n  const outboundRE = /^(https?:|mailto:|tel:)/;\n  return outboundRE.test(path);\n};\nvar isObject = (v) => toString.call(v) === \"[object Object]\";\nvar isInteger = (v, { allowString = false } = {}) => {\n  return typeof v === \"number\" ? Number.isInteger(v) : allowString && typeof v === \"string\" && Number.isInteger(Number(v));\n};\n\n// src/common.ts\nvar slugify = (str) => encodeURI(\n  str.trim().toLowerCase().replace(/\\s+/g, \"-\").replace(\n    /[\\]\\[\\!\\'\\#\\$\\%\\&\\(\\)\\*\\+\\,\\.\\/\\:\\;\\<\\=\\>\\?\\@\\\\\\^\\_\\{\\|\\}\\~\\`。，、；：？！…—·ˉ¨‘’“”々～‖∶＂＇｀｜〃〔〕〈〉《》「」『』．〖〗【】（）［］｛｝]/g,\n    \"\"\n  ).replace(/^\\-+/, \"\").replace(/\\-+$/, \"\")\n  // Remove trailing -\n);\nvar htmlEscape = (str) => {\n  const escapeMap = {\n    \"&\": \"&amp;\",\n    \"<\": \"&lt;\",\n    \">\": \"&gt;\",\n    \"'\": \"&#39;\",\n    '\"': \"&quot;\"\n  };\n  return str.replace(/[&<>'\"]/g, (char) => escapeMap[char]);\n};\nvar copy = (obj) => {\n  if (isObject(obj)) return JSON.parse(JSON.stringify(obj));\n  throw new Error(\"Input must be a non-null object.\");\n};\nvar delay = (ms) => new Promise((resolve) => setTimeout(resolve, ms));\nvar now = () => Date.now();\nvar arrayify = (value) => Array.isArray(value) ? value : [value];\nexport {\n  arrayify,\n  copy,\n  delay,\n  downloadFile,\n  fetchFile,\n  htmlEscape,\n  isClient,\n  isExternal,\n  isInteger,\n  isMac,\n  isObject,\n  now,\n  readFile,\n  slugify,\n  useFileDialog\n};\n","import { copy } from \"@renovamen/utils\";\r\nimport type { ValidPaperSize, Font } from \"~/composables/constant\";\r\n\r\nexport type ResumeStyles = {\r\n  marginV: number;\r\n  marginH: number;\r\n  lineHeight: number;\r\n  paragraphSpace: number;\r\n  themeColor: string;\r\n  fontCJK: Font;\r\n  fontEN: Font;\r\n  fontSize: number;\r\n  paper: ValidPaperSize;\r\n};\r\n\r\nexport const useStyleStore = defineStore(\"style\", () => {\r\n  const { DEFAULT } = useConstant();\r\n  const styles = reactive<ResumeStyles>(copy(DEFAULT.STYLES));\r\n\r\n  const setStyle = async <T extends keyof ResumeStyles>(\r\n    key: T,\r\n    value: ResumeStyles[T]\r\n  ) => {\r\n    // handle Google fonts\r\n    if ([\"fontCJK\", \"fontEN\"].includes(key)) {\r\n      await googleFontsService.resolve(value as Font);\r\n    }\r\n\r\n    // update styles for the current resume\r\n    styles[key] = value;\r\n\r\n    // update CSS\r\n    // vue-smart-pages will handle margins, height and width\r\n    if (![\"marginV\", \"marginH\"].includes(key)) dynamicCssService.injectToolbar(styles);\r\n  };\r\n\r\n  return {\r\n    styles,\r\n    setStyle\r\n  };\r\n});\r\n","import { isClient } from \"@renovamen/utils\";\r\nimport type * as Monaco from \"monaco-editor\";\r\nimport { setupMonacoModel, setupMonacoEditor, type MonacoModel } from \"./setup\";\r\n\r\ntype MonacoStates = {\r\n  editor: Monaco.editor.IStandaloneCodeEditor;\r\n  markdown: MonacoModel;\r\n  css: MonacoModel;\r\n};\r\n\r\nconst useMonacoState = () =>\r\n  useState<MonacoStates | undefined>(\"monacoStates\", shallowRef);\r\n\r\nexport const useMonaco = () => {\r\n  const states = useMonacoState();\r\n  const loading = useState<boolean>(\"monacoLoading\", () => false);\r\n\r\n  const setup = async (container?: HTMLElement) => {\r\n    if (!isClient || !container) return;\r\n\r\n    loading.value = true;\r\n\r\n    try {\r\n      const { editor } = await setupMonacoEditor(container);\r\n      const { data, setData } = useDataStore();\r\n\r\n      // Markdown model\r\n      const markdown = await setupMonacoModel(\"markdown\", data.markdown, () =>\r\n        setData(\"markdown\", markdown.get().getValue())\r\n      );\r\n\r\n      // CSS model\r\n      const css = await setupMonacoModel(\"css\", data.css, () =>\r\n        setData(\"css\", css.get().getValue())\r\n      );\r\n\r\n      states.value = { editor, markdown, css };\r\n    } catch (error) {\r\n      // TODO: use toast to show error\r\n      console.error(\"Failed to initialize the editor: \", error);\r\n    } finally {\r\n      loading.value = false;\r\n    }\r\n  };\r\n\r\n  const dispose = () => {\r\n    states.value?.editor.dispose();\r\n    states.value?.markdown.dispose();\r\n    states.value?.css.dispose();\r\n\r\n    states.value = undefined;\r\n    loading.value = false;\r\n  };\r\n\r\n  const activateModel = (model: \"markdown\" | \"css\") => {\r\n    states.value?.editor.setModel(states.value[model].get());\r\n  };\r\n\r\n  const setContent = (model: \"markdown\" | \"css\", content: string) => {\r\n    states.value?.[model].get().setValue(content);\r\n  };\r\n\r\n  return {\r\n    setup,\r\n    dispose,\r\n    activateModel,\r\n    setContent,\r\n    loading\r\n  };\r\n};\r\n","import { toast } from \"vue-sonner\";\r\nimport type { ChangedCase } from \"@ohmycv/case-police\";\r\n\r\nexport const useToast = () => {\r\n  const {\r\n    $i18n: { t }\r\n  } = useNuxtApp();\r\n\r\n  const save = () => {\r\n    toast.success(t(\"notification.save\"));\r\n  };\r\n\r\n  const onSwitch = (msg: string) => {\r\n    toast.info(t(\"notification.switch\", { msg }));\r\n  };\r\n\r\n  const onDelete = (msg: string) => {\r\n    toast.error(t(\"notification.delete\", { msg }));\r\n  };\r\n\r\n  const onNew = () => {\r\n    toast.success(t(\"notification.new\"));\r\n  };\r\n\r\n  const duplicate = (msg: string) => {\r\n    toast.success(\r\n      t(\"notification.duplicate\", {\r\n        old: msg,\r\n        new: msg + \" Copy\"\r\n      })\r\n    );\r\n  };\r\n\r\n  const correct = (msg?: ChangedCase[]) => {\r\n    if (msg?.length) {\r\n      const groups = msg.reduce<Record<string, number>>((acc, { from, to }) => {\r\n        const key = `${from} → ${to}`;\r\n        acc[key] = (acc[key] ?? 0) + 1;\r\n        return acc;\r\n      }, {});\r\n\r\n      const description = Object.entries(groups)\r\n        .map(([key, count]) => `${key}${count > 1 ? ` (x${count})` : \"\"}`)\r\n        .join(\", \");\r\n\r\n      toast.success(t(\"notification.correct.yes\", { num: msg.length }), {\r\n        description\r\n      });\r\n    } else {\r\n      toast.info(t(\"notification.correct.no\"));\r\n    }\r\n  };\r\n\r\n  const onImport = (msg: boolean) => {\r\n    if (msg) {\r\n      toast.success(t(\"notification.import.yes\"));\r\n    } else {\r\n      toast.error(t(\"notification.import.no\"));\r\n    }\r\n  };\r\n\r\n  return {\r\n    save,\r\n    switch: onSwitch,\r\n    delete: onDelete,\r\n    new: onNew,\r\n    duplicate,\r\n    correct,\r\n    import: onImport\r\n  };\r\n};\r\n","import * as localForage from \"localforage\";\r\nimport { isObject, isInteger, arrayify } from \"@renovamen/utils\";\r\nimport type { ValidVersion } from \"~/composables/constant\";\r\nimport type { ResumeStyles } from \"~/composables/stores/style\";\r\nimport type { DbResume } from \"./db\";\r\nimport type { ValidStorageJsonData } from \"./migrate\";\r\n\r\n/**\r\n * Write resume styles from local storage to the store\r\n *\r\n * @param styles resume styles\r\n */\r\nconst setResumeStyles = async (styles: ResumeStyles) => {\r\n  const { setStyle } = useStyleStore();\r\n\r\n  for (const [key, value] of Object.entries(styles)) {\r\n    await setStyle(key as keyof ResumeStyles, value);\r\n  }\r\n};\r\n\r\n/**\r\n * Write resume data from local storage to the store\r\n *\r\n * @param data resume data\r\n */\r\nexport const setResume = async (data: DbResume) => {\r\n  const { setData } = useDataStore();\r\n\r\n  setData(\"resumeId\", data.id);\r\n  setData(\"resumeName\", data.name);\r\n\r\n  setData(\"markdown\", data.markdown);\r\n  setData(\"css\", data.css);\r\n\r\n  await setResumeStyles(data.styles);\r\n};\r\n\r\nconst _checkType = (value: any, required: string | string[]) => {\r\n  return arrayify(required).includes(typeof value);\r\n};\r\n\r\nconst _getNestedValue = (object: any, path: string) => {\r\n  return path.split(\".\").reduce((o, p) => (o ? o[p] : undefined), object);\r\n};\r\n\r\nconst _checkObject = (\r\n  obj: any,\r\n  fields: Array<{ fields: string | string[]; types: string | string[] }>\r\n): boolean => {\r\n  return fields.every(({ fields, types }) =>\r\n    arrayify(fields).every((field) => _checkType(_getNestedValue(obj, field), types))\r\n  );\r\n};\r\n\r\nexport class IsValid {\r\n  static font = (font: any) =>\r\n    isObject(font) &&\r\n    typeof font.name === \"string\" &&\r\n    [\"string\", \"undefined\"].includes(typeof font.fontFamily);\r\n\r\n  static importedData = (data: any, version: any) => {\r\n    const { VERSION } = useConstant();\r\n\r\n    return (\r\n      // Check version\r\n      typeof version === \"string\" &&\r\n      VERSION.isVersionValid(version) &&\r\n      // Check data\r\n      isObject(data) &&\r\n      Object.entries(data).every(\r\n        ([id, item]) =>\r\n          isInteger(id, { allowString: true }) &&\r\n          _checkObject(item, VERSION.REQUIRED_DATA_TYPES[version as ValidVersion])\r\n      )\r\n    );\r\n  };\r\n\r\n  static importedJson(\r\n    json: any\r\n  ): false | { version: ValidVersion; data: ValidStorageJsonData } {\r\n    const { VERSION } = useConstant();\r\n\r\n    if (!isObject(json)) return false;\r\n\r\n    if (this.importedData(json.data, json.version)) {\r\n      return json;\r\n    } else if (this.importedData(json, VERSION.EMPTY_FALLBACK)) {\r\n      return {\r\n        data: json,\r\n        version: VERSION.EMPTY_FALLBACK\r\n      };\r\n    }\r\n\r\n    return false;\r\n  }\r\n}\r\n\r\nexport class StorageVersion {\r\n  static get = async (): Promise<ValidVersion | null> => {\r\n    const { VERSION } = useConstant();\r\n    return await localForage.getItem<ValidVersion>(VERSION.VERSION_KEY);\r\n  };\r\n\r\n  static update = async () => {\r\n    const { VERSION } = useConstant();\r\n    await localForage.setItem(VERSION.VERSION_KEY, VERSION.CURRENT);\r\n    return VERSION.CURRENT;\r\n  };\r\n}\r\n","import type { ValidVersion } from \"~/composables/constant\";\r\nimport type { StorageJsonData, DbResumeEmpty } from \"./db\";\r\n\r\nexport type StorageJsonDataV0 = {\r\n  [id: string]: DbResumeEmpty & {\r\n    update?: string;\r\n  };\r\n};\r\n\r\nexport type ValidStorageJsonData = StorageJsonDataV0 | StorageJsonData;\r\n\r\nexport type MigrateReturn = {\r\n  from: ValidVersion;\r\n  to: ValidVersion;\r\n  data: StorageJsonData;\r\n};\r\n\r\nexport class MigrateService {\r\n  private _from: ValidVersion;\r\n  private _to: ValidVersion;\r\n\r\n  constructor(fromVersion?: ValidVersion | null) {\r\n    const { VERSION } = useConstant();\r\n\r\n    this._from = fromVersion ?? VERSION.EMPTY_FALLBACK;\r\n    this._to = VERSION.CURRENT;\r\n  }\r\n\r\n  private _return = (data: StorageJsonData): MigrateReturn => ({\r\n    from: this._from,\r\n    to: this._to,\r\n    data\r\n  });\r\n\r\n  public async migrate(storage: ValidStorageJsonData): Promise<MigrateReturn> {\r\n    switch (this._from) {\r\n      case this._to:\r\n        return this._return(storage as StorageJsonData);\r\n      case \"v0\":\r\n        return this.fromV0(storage as StorageJsonDataV0);\r\n      default:\r\n        throw new Error(`Migration from version ${this._from} is not supported`);\r\n    }\r\n  }\r\n\r\n  public async fromV0(storage: StorageJsonDataV0): Promise<MigrateReturn> {\r\n    const newStorage: StorageJsonData = {};\r\n\r\n    const _migrateCss = (css: string) =>\r\n      css\r\n        // Citations\r\n        .replace(\r\n          /#vue-smart-pages-preview\\s+ul\\.crossref-list\\s*{/g,\r\n          `#resume-preview [data-scope=\"cross-ref\"][data-part=\"definitions\"] {`\r\n        )\r\n        .replace(\r\n          /#vue-smart-pages-preview\\s+li\\.crossref-item\\s+p\\s*{/g,\r\n          `#resume-preview [data-scope=\"cross-ref\"][data-part=\"definition\"] p {`\r\n        )\r\n        .replace(\r\n          /(#vue-smart-pages-preview\\s+li\\.crossref-item::marker\\s*{[^}]*})/g,\r\n          (match) =>\r\n            match.replace(\r\n              /content:\\s*attr\\(\\s*data-caption\\s*\\)\\s*;/g,\r\n              \"content: attr(data-label);\"\r\n            )\r\n        )\r\n        .replace(\r\n          /#vue-smart-pages-preview\\s+li\\.crossref-item::marker\\s*{/g,\r\n          `#resume-preview [data-scope=\"cross-ref\"][data-part=\"definition\"]::marker {`\r\n        )\r\n        .replace(\r\n          /#vue-smart-pages-preview\\s+sup\\.crossref-ref\\s*{/g,\r\n          `#resume-preview [data-scope=\"cross-ref\"][data-part=\"reference\"] {`\r\n        )\r\n        // Dark mode\r\n        .replace(\r\n          /\\.dark\\s+#vue-smart-pages-preview\\s*{\\s*background-color:\\s*#334155\\s*;\\s*color:\\s*#e5e7eb\\s*;\\s*}/,\r\n          `.dark #resume-preview [data-scope=\"vue-smart-pages\"][data-part=\"page\"] {\r\n  background-color: hsl(213, 12%, 15%);\r\n  color: hsl(216, 12%, 84%);\r\n}`\r\n        )\r\n        .replace(/\\s+\\.dark\\s+#vue-smart-pages-preview\\s+a\\s*{[^}]*}/g, \"\")\r\n        // Basic\r\n        .replace(\r\n          /#vue-smart-pages-preview\\s*{/g,\r\n          `#resume-preview [data-scope=\"vue-smart-pages\"][data-part=\"page\"] {`\r\n        )\r\n        .replace(/#vue-smart-pages-preview/g, \"#resume-preview\");\r\n\r\n    Object.entries(storage).forEach(([id, data]) => {\r\n      const { update, ...rest } = data;\r\n\r\n      newStorage[id] = {\r\n        ...rest,\r\n        created_at: id,\r\n        updated_at: update ?? id\r\n      };\r\n\r\n      const newCss = _migrateCss(newStorage[id].css);\r\n\r\n      if (newCss !== newStorage[id].css) {\r\n        console.log(`Migration: CSS updated for resume ${id}.`);\r\n        newStorage[id].css = newCss;\r\n      }\r\n    });\r\n\r\n    return this._return(newStorage);\r\n  }\r\n}\r\n","import * as localForage from \"localforage\";\r\nimport { isClient, copy, now } from \"@renovamen/utils\";\r\nimport type {\r\n  DbService,\r\n  StorageJsonData,\r\n  DbResume,\r\n  DbResumeEmpty,\r\n  DbResumeUpdate\r\n} from \"./db\";\r\nimport { StorageVersion } from \"./utils\";\r\nimport { MigrateService, type ValidStorageJsonData } from \"./migrate\";\r\n\r\nexport class LocalForageDbService implements DbService {\r\n  private _key = \"ohmycv_data\";\r\n\r\n  private _storageError = () => ({\r\n    data: null,\r\n    error: {\r\n      message: \"Error occurred while accessing local storage.\"\r\n    }\r\n  });\r\n\r\n  private _notFoundError = (id: number) => ({\r\n    data: null,\r\n    error: {\r\n      message: `Resume ${id} not found.`\r\n    }\r\n  });\r\n\r\n  private _success = <T>(data: T) => ({\r\n    data,\r\n    error: null\r\n  });\r\n\r\n  /**\r\n   * Get the storage object. Note that this method will return an empty object\r\n   * instead of null if the storage is empty. While a null return value indicates\r\n   * an error occurred while accessing the storage.\r\n   *\r\n   * @returns Storage object or null if an error occurred\r\n   */\r\n  private async _storage(): Promise<StorageJsonData | null> {\r\n    if (!isClient) return null; // Server-side rendering\r\n\r\n    try {\r\n      const storage = await localForage.getItem<ValidStorageJsonData>(this._key);\r\n      const _from = await StorageVersion.get();\r\n\r\n      // The storage is not initialized\r\n      if (!storage) {\r\n        // An empty version might indicate that the storage is not initialized, or the\r\n        // storage version is \"v0\". Here the storage is not initialized, so we can safely\r\n        // update the version to the latest.\r\n        if (!_from) await StorageVersion.update();\r\n        return {};\r\n      }\r\n\r\n      // Migrate the storage from old versions if needed\r\n      // From now on, we can safely assume the storage version is \"v0\" if the version is empty\r\n      const migrateService = new MigrateService(_from);\r\n      const { data, to, from } = await migrateService.migrate(storage);\r\n\r\n      if (from !== to) {\r\n        // Set the migrated storage\r\n        await this._setItems(data);\r\n        // Update the storage version to the latest\r\n        await StorageVersion.update();\r\n        // Backup the old storage\r\n        await localForage.setItem(`${this._key}_${from}`, storage);\r\n      }\r\n\r\n      return data;\r\n    } catch (error) {\r\n      return null;\r\n    }\r\n  }\r\n\r\n  private async _setItems(storage: StorageJsonData) {\r\n    await localForage.setItem(this._key, storage);\r\n  }\r\n\r\n  /**\r\n   * Check if the resume exists in the storage\r\n   *\r\n   * @param id\r\n   * @param allowNotExist If true, will not return error if the resume does not exist\r\n   *\r\n   * @returns Error if the storage is not available or the resume does not exist,\r\n   *         otherwise the whole storage object\r\n   */\r\n  private async _getStorageIfIdExists(id: number, allowNotExist: boolean = false) {\r\n    const storage = await this._storage();\r\n\r\n    // Check storage\r\n    if (!storage) return this._storageError();\r\n    // Check if resume exists\r\n    if (!storage[id])\r\n      return allowNotExist ? this._success(null) : this._notFoundError(id);\r\n\r\n    return this._success(storage);\r\n  }\r\n\r\n  public async queryAll() {\r\n    const storage = await this._storage();\r\n\r\n    if (!storage) return this._storageError();\r\n\r\n    const data = Object.entries(storage)\r\n      .map(([id, data]) => ({ id: Number(id), ...data }))\r\n      .sort(\r\n        (a, b) =>\r\n          b.updated_at.localeCompare(a.updated_at) ||\r\n          b.created_at.localeCompare(a.created_at)\r\n      );\r\n\r\n    return this._success(data);\r\n  }\r\n\r\n  public async queryById(id: number) {\r\n    const res = await this._getStorageIfIdExists(id, true);\r\n\r\n    if (!res.data) return res;\r\n    else return this._success({ id, ...res.data[id] });\r\n  }\r\n\r\n  public async update(data: DbResumeUpdate, newUpdateTime: boolean) {\r\n    const res = await this._getStorageIfIdExists(data.id);\r\n    if (res.error) return res;\r\n\r\n    const storage = res.data!;\r\n    const { id, ...updatedResume } = {\r\n      ...storage[data.id],\r\n      ...data,\r\n      updated_at: newUpdateTime ? now().toString() : storage[data.id].updated_at\r\n    };\r\n\r\n    storage[id] = updatedResume;\r\n    await this._setItems(storage);\r\n\r\n    return this._success({ id, ...updatedResume });\r\n  }\r\n\r\n  public async create(data: DbResumeEmpty | DbResume) {\r\n    const storage = await this._storage();\r\n\r\n    // Check storage\r\n    if (!storage) return this._storageError();\r\n\r\n    // Check if resume already exists\r\n    if (\"id\" in data && storage[data.id]) {\r\n      return {\r\n        data: null,\r\n        error: {\r\n          message: `Resume ${data.id} already exists.`\r\n        }\r\n      };\r\n    }\r\n\r\n    const _now = now();\r\n\r\n    // Generate a new \"id\", \"updated_at\" and \"created_at\" if not provided\r\n    const createdData: DbResume = {\r\n      updated_at: _now.toString(),\r\n      created_at: _now.toString(),\r\n      id: _now,\r\n      ...data\r\n    };\r\n\r\n    const { id, ...resume } = createdData;\r\n\r\n    storage[id] = resume;\r\n    await this._setItems(storage);\r\n\r\n    return this._success(createdData);\r\n  }\r\n\r\n  public async delete(id: number) {\r\n    const res = await this._getStorageIfIdExists(id);\r\n    if (res.error) return res;\r\n\r\n    const storage = res.data!;\r\n    const deleted = copy(storage[id]);\r\n\r\n    delete storage[id];\r\n    await this._setItems(storage);\r\n\r\n    return this._success({ id, ...deleted });\r\n  }\r\n}\r\n","import { downloadFile } from \"@renovamen/utils\";\r\nimport type { ValidVersion } from \"~/composables/constant\";\r\nimport { LocalForageDbService } from \"./localForage\";\r\nimport { setResume, IsValid } from \"./utils\";\r\nimport { MigrateService } from \"./migrate\";\r\nimport type {\r\n  DbService,\r\n  StorageJson,\r\n  StorageJsonData,\r\n  DbResumeUpdate,\r\n  DbResumeEmpty\r\n} from \"./db\";\r\n\r\nconst AVAILABLE_SERVICES: Record<string, DbService> = {\r\n  localForage: new LocalForageDbService()\r\n  // TODO: Support PGlite: https://github.com/electric-sql/pglite\r\n};\r\n\r\nexport class StorageService {\r\n  private _db: DbService;\r\n  private _version: ValidVersion;\r\n\r\n  constructor(service: keyof typeof AVAILABLE_SERVICES) {\r\n    const { VERSION } = useConstant();\r\n\r\n    this._version = VERSION.CURRENT;\r\n    this._db = AVAILABLE_SERVICES[service];\r\n  }\r\n\r\n  private _createEmptyResume(): DbResumeEmpty {\r\n    const { DEFAULT } = useConstant();\r\n\r\n    return {\r\n      name: DEFAULT.RESUME_NAME,\r\n      markdown: DEFAULT.MD_CONTENT,\r\n      css: DEFAULT.CSS_CONTENT,\r\n      styles: DEFAULT.STYLES\r\n    };\r\n  }\r\n\r\n  public async getResumes() {\r\n    const { data, error } = await this._db.queryAll();\r\n\r\n    if (error) {\r\n      // TODO: Use toast to show error message\r\n      console.error(\"Get resumes error:\", error.message);\r\n    }\r\n\r\n    return data ?? [];\r\n  }\r\n\r\n  public async updateResume(data: DbResumeUpdate, newUpdateTime = true) {\r\n    const { data: updatedData, error } = await this._db.update(data, newUpdateTime);\r\n\r\n    if (error) {\r\n      // TODO: Use toast to show error message\r\n      console.error(\"Update error:\", error.message);\r\n    } else {\r\n      const toast = useToast();\r\n      toast.save();\r\n    }\r\n\r\n    return updatedData;\r\n  }\r\n\r\n  public async createResume() {\r\n    const { data, error } = await this._db.create(this._createEmptyResume());\r\n\r\n    if (error) {\r\n      // TODO: Use toast to show error message\r\n      console.error(\"Create error:\", error.message);\r\n    } else {\r\n      const toast = useToast();\r\n      toast.new();\r\n    }\r\n\r\n    return data;\r\n  }\r\n\r\n  public async deleteResume(id: number) {\r\n    const { data, error } = await this._db.delete(id);\r\n\r\n    if (error) {\r\n      // TODO: Use toast to show error message\r\n      console.error(\"Delete error:\", error.message);\r\n    } else {\r\n      const toast = useToast();\r\n      toast.delete(data!.name);\r\n    }\r\n\r\n    return data;\r\n  }\r\n\r\n  public async switchToResume(id: number) {\r\n    const { setData } = useDataStore();\r\n\r\n    setData(\"loaded\", false);\r\n\r\n    const { data, error } = await this._db.queryById(id);\r\n\r\n    if (error) {\r\n      // TODO: Use toast to show error message\r\n      console.error(\"Switch error:\", error.message);\r\n    } else if (!data) {\r\n      // TODO: Use toast to show error message\r\n      console.error(`Switch error: Resume ${id} not found.`);\r\n    } else {\r\n      await setResume(data!);\r\n\r\n      const toast = useToast();\r\n      toast.switch(data!.name);\r\n\r\n      setData(\"loaded\", true);\r\n    }\r\n\r\n    return data;\r\n  }\r\n\r\n  public async duplicateResume(id: number) {\r\n    const { data, error } = await this._db.queryById(id);\r\n\r\n    if (error) {\r\n      // TODO: Use toast to show error message\r\n      console.error(\"Duplicate error:\", error.message);\r\n    } else if (!data) {\r\n      // TODO: Use toast to show error message\r\n      console.error(`Switch error: Resume ${id} not found.`);\r\n    } else {\r\n      const { id, updated_at, created_at, ...duplicated } = data!;\r\n\r\n      const { data: duplicatedData, error: createError } = await this._db.create({\r\n        ...duplicated,\r\n        name: duplicated.name + \" Copy\"\r\n      });\r\n\r\n      if (createError) {\r\n        // TODO: Use toast to show error message\r\n        console.error(\"Duplicate error:\", createError.message);\r\n      } else {\r\n        const toast = useToast();\r\n        toast.duplicate(duplicatedData!.name);\r\n      }\r\n    }\r\n  }\r\n\r\n  public async exportToJSON() {\r\n    const data = (await this.getResumes()).reduce((acc, { id, ...resume }) => {\r\n      acc[id] = resume;\r\n      return acc;\r\n    }, {} as StorageJsonData);\r\n\r\n    const json: StorageJson = {\r\n      version: this._version,\r\n      data\r\n    };\r\n\r\n    downloadFile(\"ohmycv_data.json\", JSON.stringify(json));\r\n  }\r\n\r\n  /**\r\n   * Check the validity of and import JSON data\r\n   *\r\n   * TODO: handle migration if needed\r\n   *\r\n   * @param content JSON string\r\n   */\r\n  public async importFromJson(content: string) {\r\n    const toast = useToast();\r\n\r\n    const json = (() => {\r\n      try {\r\n        return JSON.parse(content);\r\n      } catch (error) {\r\n        return null;\r\n      }\r\n    })();\r\n\r\n    const res = IsValid.importedJson(json);\r\n\r\n    // Invalid version or format\r\n    if (!res) {\r\n      console.error(\"Import error: Invalid data.\");\r\n      toast.import(false);\r\n      return;\r\n    }\r\n\r\n    // Migrate data if needed\r\n    const migrateService = new MigrateService(res.version);\r\n    const { data } = await migrateService.migrate(res.data);\r\n\r\n    for (const [_id, resume] of Object.entries(data)) {\r\n      const id = Number(_id);\r\n      const { data, error } = await this._db.queryById(id);\r\n\r\n      if (error) {\r\n        console.error(\"Import error: Storage error.\");\r\n        break;\r\n      }\r\n\r\n      if (data) {\r\n        await this._db.update({ id, ...resume }, false);\r\n      } else {\r\n        await this._db.create({ id, ...resume });\r\n      }\r\n    }\r\n\r\n    toast.import(true);\r\n  }\r\n}\r\n\r\nexport const storageService = new StorageService(\"localForage\");\r\n\r\nexport * from \"./db\";\r\nexport { IsValid } from \"./utils\";\r\n","// src/index.ts\nimport { watch } from \"vue\";\nimport { useMagicKeys } from \"@vueuse/core\";\nimport { isMac } from \"@renovamen/utils\";\nvar useShortcuts = (keys, cb) => {\n  const adjustedKeys = keys.replace(\"ctrl\", isMac ? \"meta\" : \"ctrl\").split(\"+\");\n  const magic = useMagicKeys({\n    passive: false,\n    onEventFired: (e) => {\n      if (e.type !== \"keydown\") return;\n      const isKeyActive = (key) => {\n        switch (key) {\n          case \"ctrl\":\n            return e.ctrlKey;\n          case \"meta\":\n            return e.metaKey;\n          case \"shift\":\n            return e.shiftKey;\n          default:\n            return e.key === key;\n        }\n      };\n      if (adjustedKeys.every(isKeyActive)) e.preventDefault();\n    }\n  });\n  const shortcuts = magic[adjustedKeys.join(\"+\")];\n  const { current } = magic;\n  watch(shortcuts, (v) => {\n    if (v && current.size === adjustedKeys.length) cb();\n  });\n};\nvar src_default = useShortcuts;\nexport {\n  src_default as default,\n  useShortcuts\n};\n","<template>\r\n  <EditableRoot v-slot=\"{ isEditing }\" v-bind=\"forwarded\">\r\n    <EditableArea class=\"w-full\">\r\n      <EditablePreview class=\"cursor-pointer\" />\r\n      <EditableInput />\r\n    </EditableArea>\r\n\r\n    <div v-if=\"isEditing\" class=\"flex gap-1 mt-1\">\r\n      <UiButton\r\n        :as=\"EditableSubmitTrigger\"\r\n        size=\"xs\"\r\n        class=\"flex-1 rounded hover:ring-none\"\r\n        aria-label=\"Submit\"\r\n      >\r\n        <span i-material-symbols-check-rounded size-4 />\r\n      </UiButton>\r\n\r\n      <UiButton\r\n        :as=\"EditableCancelTrigger\"\r\n        variant=\"secondary\"\r\n        size=\"xs\"\r\n        class=\"flex-1 rounded\"\r\n        aria-label=\"Cancel\"\r\n      >\r\n        <span i-material-symbols-close-rounded size-4 />\r\n      </UiButton>\r\n    </div>\r\n  </EditableRoot>\r\n</template>\r\n\r\n<script lang=\"ts\" setup>\r\nimport {\r\n  EditableSubmitTrigger,\r\n  EditableCancelTrigger,\r\n  type EditableRootProps,\r\n  type EditableRootEmits,\r\n  useForwardPropsEmits\r\n} from \"radix-vue\";\r\n\r\nconst props = defineProps<EditableRootProps>();\r\nconst emits = defineEmits<EditableRootEmits>();\r\n\r\nconst forwarded = useForwardPropsEmits(props, emits);\r\n</script>\r\n","// src/index.ts\nimport Katex from \"katex\";\nimport { htmlEscape } from \"@renovamen/utils\";\nvar isValidDelim = (state, pos) => {\n  const prevChar = pos > 0 ? state.src.charCodeAt(pos - 1) : -1;\n  const nextChar = pos + 1 <= state.posMax ? state.src.charCodeAt(pos + 1) : -1;\n  const isWhitespace = (char) => char === 32 || char === 9;\n  const isDigit = (char) => char >= 48 && char <= 57;\n  const canOpen = !isWhitespace(nextChar);\n  const canClose = !isWhitespace(prevChar) && !isDigit(nextChar);\n  return { canOpen, canClose };\n};\nvar mathInline = (state, silent) => {\n  if (state.src[state.pos] !== \"$\") return false;\n  const res = isValidDelim(state, state.pos);\n  if (!res.canOpen) {\n    if (!silent) state.pending += \"$\";\n    state.pos += 1;\n    return true;\n  }\n  const start = state.pos + 1;\n  let match = start;\n  while ((match = state.src.indexOf(\"$\", match)) !== -1) {\n    let pos = match - 1;\n    while (state.src[pos] === \"\\\\\") pos -= 1;\n    if ((match - pos) % 2 === 1) break;\n    match += 1;\n  }\n  if (match === -1) {\n    if (!silent) state.pending += \"$\";\n    state.pos = start;\n    return true;\n  }\n  if (match - start === 0) {\n    if (!silent) state.pending += \"$$\";\n    state.pos = start + 1;\n    return true;\n  }\n  const closeDelim = isValidDelim(state, match);\n  if (!closeDelim.canClose) {\n    if (!silent) state.pending += \"$\";\n    state.pos = start;\n    return true;\n  }\n  if (!silent) {\n    const token = state.push(\"mathInline\", \"math\", 0);\n    token.markup = \"$\";\n    token.content = state.src.slice(start, match);\n  }\n  state.pos = match + 1;\n  return true;\n};\nvar mathBlock = (state, start, end, silent) => {\n  let pos = state.bMarks[start] + state.tShift[start];\n  const max = state.eMarks[start];\n  if (pos + 2 > max || state.src.slice(pos, pos + 2) !== \"$$\") return false;\n  pos += 2;\n  let firstLine = state.src.slice(pos, max);\n  if (silent) return true;\n  let found = firstLine.trim().endsWith(\"$$\");\n  if (found) firstLine = firstLine.trim().slice(0, -2);\n  let next = start;\n  let lastLine = \"\";\n  while (!found) {\n    next += 1;\n    if (next >= end) break;\n    pos = state.bMarks[next] + state.tShift[next];\n    const lineMax = state.eMarks[next];\n    if (pos < lineMax && state.tShift[next] < state.blkIndent) break;\n    const trimmedLine = state.src.slice(pos, lineMax).trim();\n    if (trimmedLine.endsWith(\"$$\")) {\n      lastLine = trimmedLine.slice(0, -2);\n      found = true;\n    }\n  }\n  state.line = next + 1;\n  const token = state.push(\"mathBlock\", \"math\", 0);\n  token.block = true;\n  token.content = (firstLine.trim() ? `${firstLine}\n` : \"\") + state.getLines(start + 1, next, state.tShift[start], true) + (lastLine.trim() ? lastLine : \"\");\n  token.map = [start, state.line];\n  token.markup = \"$$\";\n  return true;\n};\nvar MarkdownItKatex = (md, options = { throwOnError: false }) => {\n  const renderKatex = (tex, options2, displayMode) => {\n    options2.displayMode = displayMode;\n    try {\n      return displayMode ? `<p>${Katex.renderToString(tex, options2)}</p>\n` : Katex.renderToString(tex, options2);\n    } catch (error) {\n      if (options2.throwOnError) console.warn(error);\n      const errorMsg = htmlEscape(error.toString());\n      const escapedTex = htmlEscape(tex);\n      return displayMode ? `<p class='katex-error' title='${errorMsg}'>${escapedTex}</p>\n` : `<span title='${errorMsg}'>${escapedTex}</span>`;\n    }\n  };\n  md.inline.ruler.after(\"escape\", \"mathInline\", mathInline);\n  md.block.ruler.after(\"blockquote\", \"mathBlock\", mathBlock, {\n    alt: [\"paragraph\", \"reference\", \"blockquote\", \"list\"]\n  });\n  md.renderer.rules.mathInline = (tokens, idx) => renderKatex(tokens[idx].content, options, false);\n  md.renderer.rules.mathBlock = (tokens, idx) => renderKatex(tokens[idx].content, options, true);\n};\nvar src_default = MarkdownItKatex;\nexport {\n  MarkdownItKatex,\n  src_default as default\n};\n","// src/index.ts\nvar _anchorId = (tokens, idx) => Number(tokens[idx].meta.id + 1).toString();\nvar _anchorLabel = (tokens, idx) => tokens[idx].meta.label;\nvar _isOpen = (state, start) => {\n  return state.src.charCodeAt(start) === 91 && state.src.charCodeAt(start + 1) === 126;\n};\nvar _isClose = (state, pos) => {\n  return state.src.charCodeAt(pos) === 93;\n};\nvar _extractLabel = (state, start, end) => {\n  return state.src.slice(start, end);\n};\nvar render = (type) => (tokens, idx) => {\n  const id = `cross-ref-${_anchorId(tokens, idx)}`;\n  const label = _anchorLabel(tokens, idx);\n  return type === \"ref\" ? `<sup data-scope=\"cross-ref\" data-part=\"reference\"><a data-scope=\"cross-ref\" data-part=\"link\" href=\"#${id}\" id=\"${id}\">${label}</a></sup>` : `<ul data-scope=\"cross-ref\" data-part=\"definitions\"><li id=\"${id}\" data-scope=\"cross-ref\" data-part=\"definition\" data-label=\"${label}\">`;\n};\nvar _processDefToken = (state, startLine, endLine, pos, label) => {\n  state.env.crossRef ??= {};\n  state.env.crossRef.labelToId ??= {};\n  state.env.crossRef.labelToId[label] = -1;\n  const openToken = new state.Token(\"renderDefOpen\", \"\", 1);\n  openToken.meta = { label };\n  openToken.level = state.level++;\n  state.tokens.push(openToken);\n  const bMarks = state.bMarks[startLine];\n  const tShift = state.tShift[startLine];\n  const sCount = state.sCount[startLine];\n  const posAfterColon = pos;\n  const initial = sCount + pos - (bMarks + tShift);\n  let offset = initial;\n  while (pos < state.eMarks[startLine]) {\n    const ch = state.src.charCodeAt(pos);\n    if (state.md.utils.isSpace(ch)) {\n      offset += ch === 9 ? 4 - offset % 4 : 1;\n    } else {\n      break;\n    }\n    pos++;\n  }\n  state.tShift[startLine] = pos - posAfterColon;\n  state.sCount[startLine] = offset - initial;\n  state.bMarks[startLine] = posAfterColon;\n  state.blkIndent += 4;\n  if (state.sCount[startLine] < state.blkIndent)\n    state.sCount[startLine] += state.blkIndent;\n  state.md.block.tokenize(state, startLine, endLine);\n  state.blkIndent -= 4;\n  state.tShift[startLine] = tShift;\n  state.sCount[startLine] = sCount;\n  state.bMarks[startLine] = bMarks;\n  const closeToken = new state.Token(\"renderDefClose\", \"\", -1);\n  closeToken.level = --state.level;\n  state.tokens.push(closeToken);\n};\nvar processDef = (state, startLine, endLine, silent) => {\n  const start = state.bMarks[startLine] + state.tShift[startLine];\n  const max = state.eMarks[startLine];\n  if (start + 4 > max || !_isOpen(state, start)) return false;\n  let pos = start + 2;\n  while (pos < max && !_isClose(state, pos)) pos++;\n  if (pos === start + 2) return false;\n  if (pos + 1 >= max || state.src.charCodeAt(pos + 1) !== 58) return false;\n  if (silent) return true;\n  const label = _extractLabel(state, start + 2, pos);\n  _processDefToken(state, startLine, endLine, pos + 2, label);\n  return true;\n};\nvar processRef = (state, silent) => {\n  if (!state.env.crossRef?.labelToId) return false;\n  if (state.pos + 3 > state.posMax || !_isOpen(state, state.pos)) return false;\n  let pos = state.pos + 2;\n  while (pos < state.posMax && !_isClose(state, pos)) pos++;\n  if (pos === state.pos + 2 || pos >= state.posMax) return false;\n  const label = _extractLabel(state, state.pos + 2, pos);\n  if (state.env.crossRef.labelToId[label] === void 0) return false;\n  if (!silent) {\n    state.env.crossRef.list ??= [];\n    const id = state.env.crossRef.labelToId[label] === -1 ? state.env.crossRef.list.push(label) - 1 : state.env.crossRef.labelToId[label];\n    state.env.crossRef.labelToId[label] = id;\n    const token = state.push(\"renderRef\", \"\", 0);\n    token.meta = { id, label };\n  }\n  state.pos = pos + 1;\n  return true;\n};\nvar postProcessDef = (state) => {\n  for (const token of state.tokens) {\n    if (token.type === \"renderDefOpen\") {\n      token.meta = {\n        ...token.meta,\n        id: state.env.crossRef?.labelToId?.[token.meta.label] ?? -1\n      };\n    }\n  }\n};\nvar MarkdownItCrossRef = (md) => {\n  md.renderer.rules.renderRef = render(\"ref\");\n  md.renderer.rules.renderDefOpen = render(\"defOpen\");\n  md.renderer.rules.renderDefClose = () => \"</li>\\n</ul>\\n\";\n  md.block.ruler.before(\"reference\", \"processDef\", processDef, {\n    alt: [\"paragraph\", \"reference\"]\n  });\n  md.inline.ruler.after(\"image\", \"processRef\", processRef);\n  md.core.ruler.after(\"inline\", \"postProcessDef\", postProcessDef);\n};\nvar src_default = MarkdownItCrossRef;\nexport {\n  MarkdownItCrossRef,\n  src_default as default\n};\n","// src/index.ts\nvar UNESCAPE_RE = /\\\\([ \\\\!\"#$%&'()*+,.\\/:;<=>?@[\\]^_`{|}~-])/g;\nvar renderNewPage = () => `<div class=\"md-it-newpage\"></div>`;\nvar renderLineBreak = (tokens, idx) => `<div class=\"md-it-line-break\" style=\"margin-top:${tokens[idx].meta.h};\"></div>`;\nvar checkPattern = (state, start, pattern, options = {}) => {\n  const { minLength = pattern.length, silent = false } = options;\n  const pos = state.bMarks[start] + state.tShift[start];\n  const max = state.eMarks[start];\n  if (silent) return false;\n  if (pos + minLength > max) return false;\n  if (state.src.slice(pos, pos + pattern.length) !== pattern) return false;\n  return {\n    pos,\n    max\n  };\n};\nvar newPage = (state, start, end, silent) => {\n  if (!checkPattern(state, start, \"\\\\newpage\", { silent })) return false;\n  state.line = start + 1;\n  const token = state.push(\"renderNewPage\", \"\", 0);\n  token.block = true;\n  token.map = [start, state.line];\n  token.markup = \"\\\\newpage\";\n  return true;\n};\nvar lineBreak = (state, start, end, silent) => {\n  const res = checkPattern(state, start, \"\\\\\\\\[\", {\n    minLength: 5,\n    // Should be at least \"\\\\[x]\"\n    silent\n  });\n  if (!res) return false;\n  const { pos, max } = res;\n  let lastPos = pos + 4;\n  while (lastPos < max && state.src[lastPos] !== \"]\") lastPos++;\n  if (lastPos >= max) return false;\n  const height = state.src.slice(pos + 3, lastPos);\n  if (height.match(/(^|[^\\\\])(\\\\\\\\)*\\s/)) return false;\n  state.line = start + 1;\n  const token = state.push(\"renderLineBreak\", \"\", 0);\n  token.meta = { h: height.replace(UNESCAPE_RE, \"$1\") };\n  token.block = true;\n  token.map = [start, state.line];\n  token.markup = \"\\\\[]\";\n  return true;\n};\nvar MarkdownItLatexCmds = (md) => {\n  md.renderer.rules.renderNewPage = renderNewPage;\n  md.renderer.rules.renderLineBreak = renderLineBreak;\n  md.block.ruler.after(\"blockquote\", \"newPage\", newPage);\n  md.block.ruler.after(\"newPage\", \"lineBreak\", lineBreak);\n};\nvar src_default = MarkdownItLatexCmds;\nexport {\n  MarkdownItLatexCmds,\n  src_default as default\n};\n","// src/front-matter.ts\nimport * as yamlParser from \"js-yaml\";\nvar OPTIONAL_BYTE_ORDER_MARK = \"\\\\ufeff?\";\nvar PLATFORM = typeof process !== \"undefined\" ? process.platform : \"\";\nvar PATTERN = \"^(\" + OPTIONAL_BYTE_ORDER_MARK + \"(= yaml =|---)$([\\\\s\\\\S]*?)^(?:\\\\2|\\\\.\\\\.\\\\.)\\\\s*$\" + (PLATFORM === \"win32\" ? \"\\\\r?\" : \"\") + \"(?:\\\\n)?)\";\nvar FrontMatterParser = class {\n  options;\n  _lastFrontMatter = {};\n  constructor(options = {}) {\n    this.options = options;\n    this.options.errorBehavior = options.errorBehavior || \"error\";\n  }\n  _emptyResults = (body) => ({\n    frontMatter: {},\n    body,\n    bodyBegin: 1\n  });\n  /**\n   * Get the line number where the body begins.\n   */\n  _bodyBegin(match, content) {\n    const offset = match.index + match[0].length;\n    const lines = content.slice(0, offset).split(\"\\n\");\n    return lines.length;\n  }\n  /**\n   * Split the content into front matter and body.\n   *\n   * @param content Markdown content, including front matter and body.\n   * @returns\n   * - `false` if the content does not contain front matter\n   * - `{ frontMatterString, body, bodyBegin }` if contains\n   * @see {@link FrontMatterResults}\n   */\n  split(content) {\n    const regex = new RegExp(PATTERN, \"m\");\n    const match = regex.exec(content);\n    if (!match) return false;\n    const frontMatterString = match[match.length - 1].trim();\n    const body = content.slice(match[0].length);\n    const bodyBegin = this._bodyBegin(match, content);\n    return {\n      frontMatterString,\n      body,\n      bodyBegin\n    };\n  }\n  _parse(content) {\n    const split = this.split(content);\n    if (!split) return this._emptyResults(content);\n    try {\n      const frontMatter = yamlParser.load(split.frontMatterString) || {};\n      this._lastFrontMatter = frontMatter;\n      return { ...split, frontMatter };\n    } catch (e) {\n      const frontMatter = this.options.errorBehavior === \"error\" ? (() => {\n        throw e;\n      })() : this.options.errorBehavior === \"last\" ? this._lastFrontMatter : {};\n      return { ...split, frontMatter };\n    }\n  }\n  /**\n   * Extract and parse front matter from a markdown document. A front matter should look like:\n   *\n   * ```\n   * ---\n   * key: value\n   * ---\n   * ```\n   *\n   * @param content Markdown content, including front matter and body.\n   * @returns `{ body, bodyBegin, frontMatter, frontMatterString }`\n   * @see {@link FrontMatterResults}\n   */\n  parse(content) {\n    const lines = content.split(/(\\r?\\n)/);\n    if (lines[0] && /= yaml =|---/.test(lines[0])) {\n      return this._parse(content);\n    } else {\n      return this._emptyResults(content);\n    }\n  }\n};\n\n// src/index.ts\nvar src_default = FrontMatterParser;\nexport {\n  FrontMatterParser,\n  src_default as default\n};\n","import MarkdownIt from \"markdown-it\";\r\nimport type {\r\n  PluginSimple,\r\n  PluginWithOptions,\r\n  Options as MarkdownItOptions\r\n} from \"markdown-it\";\r\n// @ts-expect-error missing types\r\nimport MarkdownItDeflist from \"markdown-it-deflist\";\r\nimport LinkAttributes from \"markdown-it-link-attributes\";\r\nimport MarkdownItKatex from \"@ohmycv/markdown-it-katex\";\r\nimport MarkdownItCite from \"@ohmycv/markdown-it-cross-ref\";\r\nimport MarkdownItLatexCmds from \"@ohmycv/markdown-it-latex-cmds\";\r\nimport { FrontMatterParser } from \"@ohmycv/front-matter\";\r\n\r\ntype ResumeHeaderItem = {\r\n  readonly text: string;\r\n  readonly link?: string;\r\n  readonly newLine?: boolean;\r\n};\r\n\r\ntype ResumeFrontMatter = {\r\n  readonly name?: string;\r\n  readonly header?: Array<ResumeHeaderItem>;\r\n};\r\n\r\ntype MarkdownItPlugins = Array<\r\n  PluginSimple | PluginWithOptions | [PluginWithOptions, any]\r\n>;\r\n\r\ntype MarkdownServiceOptions = {\r\n  readonly plugins?: MarkdownItPlugins;\r\n  readonly options?: MarkdownItOptions;\r\n};\r\n\r\nexport class MarkdownService {\r\n  private _md: MarkdownIt;\r\n  private _frontMatterParser: FrontMatterParser<ResumeFrontMatter>;\r\n\r\n  constructor(opt: MarkdownServiceOptions = {}) {\r\n    this._md = this._setupMarkdownIt(opt);\r\n    this._frontMatterParser = new FrontMatterParser<ResumeFrontMatter>({\r\n      errorBehavior: \"last\"\r\n    });\r\n  }\r\n\r\n  private _setupMarkdownIt({ plugins = [], options = {} }: MarkdownServiceOptions) {\r\n    const md = new MarkdownIt(options);\r\n\r\n    plugins.forEach((plugin) => {\r\n      if (Array.isArray(plugin)) md.use(...plugin);\r\n      else md.use(plugin);\r\n    });\r\n\r\n    return md;\r\n  }\r\n\r\n  private _renderMarkdown(md: string) {\r\n    return this._md.render(md);\r\n  }\r\n\r\n  /**\r\n   * Convert\r\n   *\r\n   *  <dt>...</dt>\r\n   *  <dd>...</dd>\r\n   *  <dt>...</dt>\r\n   *  <dd>...</dd>\r\n   *\r\n   * (this would happen if two deflists are adjacent)\r\n   *\r\n   * to\r\n   *\r\n   * <dl>\r\n   *   <dt>...</dt>\r\n   *   <dd>...</dd>\r\n   * </dl>\r\n   * <dl>\r\n   *   <dt>...</dt>\r\n   *   <dd>...</dd>\r\n   * </dl>\r\n   *\r\n   * @param html HTML string\r\n   * @returns HTML string with resolved deflists\r\n   */\r\n  private _resolveDeflist(html: string) {\r\n    return html.replace(/<dl>([\\s\\S]*?)<\\/dl>/g, (match) =>\r\n      match.replace(/<\\/dd>\\n<dt>/g, \"</dd>\\n</dl>\\n<dl>\\n<dt>\")\r\n    );\r\n  }\r\n\r\n  private _renderHeaderItem(item: ResumeHeaderItem, hasSeparator: boolean) {\r\n    const content = item.link\r\n      ? `<a href=\"${item.link}\" target=\"_blank\" rel=\"noopener noreferrer\">${item.text}</a>`\r\n      : item.text;\r\n\r\n    const element = `<span class=\"resume-header-item ${hasSeparator ? \"\" : \"no-separator\"}\">\r\n      ${content}\r\n    </span>`;\r\n\r\n    return item.newLine ? `<br>\\n${element}` : element;\r\n  }\r\n\r\n  public renderHeader(frontMatter: ResumeFrontMatter) {\r\n    const content = [\r\n      frontMatter.name ? `<h1>${frontMatter.name}</h1>\\n` : \"\",\r\n      (frontMatter.header ?? [])\r\n        .map((item, i, array) =>\r\n          this._renderHeaderItem(item, i !== array.length - 1 && !array[i + 1].newLine)\r\n        )\r\n        .join(\"\\n\")\r\n    ].join(\"\");\r\n\r\n    return `<div class=\"resume-header\">${content}</div>`;\r\n  }\r\n\r\n  public renderResume(md: string) {\r\n    const { body, frontMatter } = this._frontMatterParser.parse(md);\r\n\r\n    const content = this._resolveDeflist(this._renderMarkdown(body));\r\n    const header = this.renderHeader(frontMatter);\r\n\r\n    return header + content;\r\n  }\r\n}\r\n\r\nexport const markdownService = new MarkdownService({\r\n  plugins: [\r\n    MarkdownItDeflist,\r\n    MarkdownItKatex,\r\n    MarkdownItCite,\r\n    MarkdownItLatexCmds,\r\n    [\r\n      LinkAttributes,\r\n      {\r\n        matcher: (link: string) => /^https?:\\/\\//.test(link),\r\n        attrs: {\r\n          target: \"_blank\",\r\n          rel: \"noopener\"\r\n        }\r\n      }\r\n    ]\r\n  ],\r\n  options: {\r\n    html: true\r\n  }\r\n});\r\n","// src/useSmartPages.ts\nimport { onMounted } from \"vue\";\nimport {\n  unrefElement,\n  toValue,\n  watchThrottled\n} from \"@vueuse/core\";\n\n// src/dom.ts\nvar NEW_PAGE_CLASS = \"md-it-newpage\";\nvar _elementHeight = (element) => {\n  const style = window.getComputedStyle(element);\n  const marginTop = parseInt(style.marginTop) || 0;\n  const marginBottom = parseInt(style.marginBottom) || 0;\n  return element.clientHeight + marginTop + marginBottom;\n};\nvar _createPage = (size, margins) => {\n  const page = document.createElement(\"div\");\n  page.dataset.scope = \"vue-smart-pages\";\n  page.dataset.part = \"page\";\n  page.style.height = `${size.height}px`;\n  setWidthAndMargins(page, size, margins);\n  return page;\n};\nvar setWidthAndMargins = (element, size, margins) => {\n  element.style.width = `${size.width}mm`;\n  element.style.padding = `${margins.top}px ${margins.right}px ${margins.bottom}px ${margins.left}px`;\n};\nvar breakPage = (target, size, margins) => {\n  const maxHeight = size.height - margins.top - margins.bottom;\n  const pages = document.createElement(\"div\");\n  let accHeight = 0;\n  let page = _createPage(size, margins);\n  Array.from(target.children).forEach((child) => {\n    const childHeight = _elementHeight(child);\n    if (accHeight + childHeight > maxHeight || child.className === NEW_PAGE_CLASS) {\n      pages.appendChild(page);\n      accHeight = 0;\n      page = _createPage(size, margins);\n    }\n    page.appendChild(child);\n    accHeight += childHeight;\n  });\n  pages.appendChild(page);\n  target.innerHTML = pages.innerHTML;\n};\n\n// src/useSmartPages.ts\nvar useSmartPages = (target, html, size, margins = {}, options = {}) => {\n  const render = async () => {\n    const element = unrefElement(target);\n    if (!element) return;\n    const { width, height } = toValue(size);\n    const { top = 0, bottom = 0, left = 0, right = 0 } = toValue(margins);\n    const _size = { width, height };\n    const _margins = { top, bottom, left, right };\n    const copy = element.cloneNode(true);\n    copy.innerHTML = toValue(html);\n    setWidthAndMargins(copy, _size, _margins);\n    document.body.appendChild(copy);\n    if (options.beforeRender) await options.beforeRender();\n    breakPage(copy, _size, _margins);\n    element.innerHTML = copy.innerHTML;\n    document.body.removeChild(copy);\n    if (options.afterRender) await options.afterRender();\n  };\n  onMounted(render);\n  watchThrottled([size, margins, html], render, options.watchThrottledOptions);\n  return { render };\n};\n\n// src/index.ts\nvar src_default = useSmartPages;\nexport {\n  src_default as default,\n  useSmartPages\n};\n","<template>\r\n  <div class=\"resume-render\" :id=\"`resume-${id}`\" ref=\"target\" />\r\n</template>\r\n\r\n<script lang=\"ts\" setup>\r\nimport { useSmartPages } from \"@ohmycv/vue-smart-pages\";\r\nimport type { ResumeStyles } from \"~/composables/stores/style\";\r\n\r\nconst props = defineProps<{\r\n  id: string | number;\r\n  markdown: string;\r\n  css?: string;\r\n  styles: ResumeStyles;\r\n}>();\r\n\r\nconst constant = useConstant();\r\nconst target = ref<HTMLElement>();\r\n\r\nconst size = computed(() => ({\r\n  height: constant.PAPER.sizeToPx(props.styles.paper, \"h\"),\r\n  width: constant.PAPER.SIZES[props.styles.paper].w\r\n}));\r\nconst margins = computed(() => ({\r\n  top: props.styles.marginV,\r\n  bottom: Math.max(props.styles.marginV - 10, constant.RENDER.PRINT_BOTTOM),\r\n  left: props.styles.marginH,\r\n  right: props.styles.marginH\r\n}));\r\nconst html = computed(() => markdownService.renderResume(props.markdown));\r\n\r\nconst { render } = useSmartPages(target, html, size, margins, {\r\n  beforeRender: async () => {\r\n    // Wait for the fonts to be loaded\r\n    await googleFontsService.presetObserver(props.styles);\r\n  },\r\n  watchThrottledOptions: {\r\n    throttle: 200\r\n  }\r\n});\r\n\r\nwatchThrottled(\r\n  () => [\r\n    props.styles.lineHeight,\r\n    props.styles.paragraphSpace,\r\n    props.styles.fontSize,\r\n    props.css,\r\n    props.styles.fontCJK,\r\n    props.styles.fontEN\r\n  ],\r\n  render,\r\n  {\r\n    throttle: 200,\r\n    leading: false\r\n  }\r\n);\r\n\r\ndefineExpose({\r\n  render\r\n});\r\n</script>\r\n","<script setup lang=\"ts\">\r\nimport type { HTMLAttributes } from \"vue\";\r\nimport { cn } from \"~/utils/shadcn\";\r\n\r\ninterface SkeletonProps {\r\n  class?: HTMLAttributes[\"class\"];\r\n}\r\n\r\nconst props = defineProps<SkeletonProps>();\r\n</script>\r\n\r\n<template>\r\n  <div :class=\"cn('animate-pulse rounded-md bg-muted', props.class)\" />\r\n</template>\r\n"],"names":["FONT","V.LOCAL_EN_FONTS","V.LOCAL_CJK_FONTS","V.GF_CJK_SUBSETS","V.GF_CJK_FAMILY_TO_NAME","V.GF_CJK_FIRST","V.GF_IGNORE_FONTS","V.PAPER_SIZES","V.MM_TO_PX","RENDER","V.PRESET_COLORS","V.DEFAULT_STYLES","V.DEFAULT_MD_CONTENT","V.DEFAULT_CSS_CONTENT","V.CURRENT_VERSION","V.EMPTY_VERSION_FALLBACK","V.VERSION_STORAGE_KEY","V.VALID_VERSIONS","src_default","GoogleFontsLoader","fields","data","toast","id","MarkdownItKatex","MarkdownItCite","MarkdownItLatexCmds","render","copy"],"mappings":"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"}